class WrongAge extends Exception {
   public WrongAge(String message) {
        super(message);
    }
}

class Father {
    int fatherAge;

    public Father(int age) throws WrongAge {
        if (age < 0) {
           
            throw new WrongAge("Father's age cannot be negative.");
        }
        this.fatherAge = age;
    }

    public int getFatherAge() {
        return fatherAge;
    }
}

class Son extends Father {
    int sonAge;

    public Son(int fatherAge, int sonAge) throws WrongAge {
        super(fatherAge);  
        if (sonAge < 0){
            throw new WrongAge("Son's age cannot be negative.");
        }
        if (sonAge >= fatherAge) {
            throw new WrongAge("Son's age cannot be greater than or equal to father's age.");
        }
        this.sonAge = sonAge;
    }

    public int getSonAge() {
        return sonAge;
    }
}

public class Main {
    public static void main(String[] args) {
        try {
            Father father = new Father(40);
            System.out.println("Father's age: " + father.getFatherAge());

            Son son = new Son(40, 15);
            System.out.println("Son's age: " + son.getSonAge());

            Son sonWithInvalidAge = new Son(40, 45);  
        } 
	catch (WrongAge e) {
            System.out.println("Exception: " + e.getMessage());
        }

        try {
	    Father fatherWithInvalidAge = new Father(-5);  
        } 
	catch (WrongAge e) {
            System.out.println("Exception: " + e.getMessage());
        }
    }
}
